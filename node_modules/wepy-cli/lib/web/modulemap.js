'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var ModuleMap = function () {
    function ModuleMap() {
        _classCallCheck(this, ModuleMap);

        this._index = -1;
        this._map = {};
        this._objectMap = {};
        this._objectPending = {};
    }

    _createClass(ModuleMap, [{
        key: 'add',
        value: function add(file, wpy) {
            var index = this.get(file);
            if (index === undefined) {
                this._index++;
                this.length = this._index + 1;
                index = this._index;
                this._map[file] = index;
            }
            if (wpy) this._objectMap[index] = wpy;
            return index;
        }
    }, {
        key: 'get',
        value: function get(file) {
            return this._map[file];
        }
    }, {
        key: 'getObject',
        value: function getObject(file) {
            var index = file;
            if (typeof file === 'string') {
                index = this.get(file);
            }
            return this._objectMap[index];
        }
    }, {
        key: 'getArray',
        value: function getArray() {
            this._objectMap.length = this.length;
            return Array.prototype.slice.apply(this._objectMap);
        }
    }, {
        key: 'setPending',
        value: function setPending(src) {
            this._objectPending[src] = true;
        }
    }, {
        key: 'getPending',
        value: function getPending(src) {
            return this._objectPending[src];
        }
    }]);

    return ModuleMap;
}();

var instance = void 0;

exports = module.exports = {
    getInstance: function getInstance() {
        if (!instance) throw 'Create instance before call getInstance';
        return instance;
    },
    createInstance: function createInstance() {
        instance = new ModuleMap();
        return instance;
    }
};
//# sourceMappingURL=modulemap.js.map